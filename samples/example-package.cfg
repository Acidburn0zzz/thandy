

# This is package is name 'example'
name = "example"

# Encodes version 0.1.2.
version = [0, 1, 2]

# Where in the repository does it go?
location = "/pkginfo/example/rpm/example-0.1.2.txt"

# Where in the repository does its underlying rpm or exe (etc) file go?
relpath = "/data/example-0.1.2.rpm"

# Decriptions of the package.
ShortDesc('en',  "Example package")
LongDesc('en',
"""This is an example package.

Its description is not quite so long as it might be, but hey.""")

# What kind of package is this?  Mostly this is ignored right now.
# Don't use 'exe': that's special.
format = "none"

# Thandy knows how to manage some file formats, but it needs to include
# extra info to do so properly.
#
#### The RPM format
#
# format = "rpm"
# # What is the actual version, according to RPM, of this package when it's
# # installed?
# rpm_version = "0.1.2"

#### The EXE format.
#  # (You can use this format for anything that you install by executing it
#  # that does not have its own built-in installation mechanism.)
#
# format = "win32"
#
# # What do you call to install the package?
# # This needs to be a list of strings.  ${FILE} is expanded to the file
# # name.
# command_install = [ "${FILE}", "--silent", "--automatic", "--omit-bugs", ]
#
# # Optional: a registry key, value pair for a version number that this
# # package will set when it installs itself.  The exe is responsible for
# # setting this value; thandy only reads the value to see whether the
# # exe is installed.
# #    (Remember to prefix your registry string with r, so that the internal
# # backslashes are automatically escaped.)
#
# exe_registry_ent = [ r'HKEY_LOCAL_MACHINE\Software\Blahblahblach\Version',
#                      '0.1.2' ]
#
# # Optional: a database key and value that are stored in the internal
# # Thandy database when this item is installed, so Thandy can remember
# # if it is installed.  Do not use this if you are setting exe_registry_ent.
# # Using the registry is a better idea.
# db_key = "example-exe"
# db_val = "0.1.2"

